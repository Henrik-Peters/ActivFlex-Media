<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!-- Style resources for the media bar toggle button -->
    <SolidColorBrush x:Key="MediaBarButton.Default.Color" Color="#D2D2D9"/>
    <SolidColorBrush x:Key="MediaBarButton.Hover.Color" Color="#61B0E0"/>
    <SolidColorBrush x:Key="MediaBarButton.Pressed.Color" Color="#1172C5"/>

    <!-- Style resources for the show info button -->
    <SolidColorBrush x:Key="ShowInfo.Default.Color" Color="#E6E6E6"/>
    <SolidColorBrush x:Key="ShowInfo.Hover.Color" Color="#61B0E0"/>
    <SolidColorBrush x:Key="ShowInfo.Pressed.Color" Color="#1172C5"/>

    <!-- Style resources for the nav tree toggle button -->
    <sys:Double x:Key="ToggleNavButton.Circle.Radius">3</sys:Double>
    <sys:Double x:Key="ToggleNavButton.Border.Thickness">0.2</sys:Double>
    <SolidColorBrush x:Key="ToggleNavButton.Circle.Color" Color="#D2D2D9"/>
    <SolidColorBrush x:Key="ToggleNavButton.Border.Color" Color="#C5C8D0"/>
    <SolidColorBrush x:Key="ToggleNavButton.Hover.Color" Color="#6EC8FF"/>
    <SolidColorBrush x:Key="ToggleNavButton.Pressed.Color" Color="#0064FF"/>
    
    <!-- Style definitions for the nav tree toggle button -->
    <Style x:Key="toggleNavButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid Background="Transparent">
                        <Ellipse x:Name="CircleTop"
                                 Margin="0,-14,0,0"
                                 Fill="{StaticResource ToggleNavButton.Circle.Color}" 
                                 Width="{StaticResource ToggleNavButton.Circle.Radius}" 
                                 Height="{StaticResource ToggleNavButton.Circle.Radius}"
                                 Stroke="{StaticResource ToggleNavButton.Border.Color}"
                                 StrokeThickness="{StaticResource ToggleNavButton.Border.Thickness}"/>

                        <Ellipse x:Name="CircleCenter"
                                 Fill="{StaticResource ToggleNavButton.Circle.Color}" 
                                 Width="{StaticResource ToggleNavButton.Circle.Radius}" 
                                 Height="{StaticResource ToggleNavButton.Circle.Radius}"
                                 Stroke="{StaticResource ToggleNavButton.Border.Color}"
                                 StrokeThickness="{StaticResource ToggleNavButton.Border.Thickness}"/>

                        <Ellipse x:Name="CircleBot"
                                 Margin="0,14,0,0"
                                 Fill="{StaticResource ToggleNavButton.Circle.Color}" 
                                 Width="{StaticResource ToggleNavButton.Circle.Radius}" 
                                 Height="{StaticResource ToggleNavButton.Circle.Radius}"
                                 Stroke="{StaticResource ToggleNavButton.Border.Color}"
                                 StrokeThickness="{StaticResource ToggleNavButton.Border.Thickness}"/>
                    </Grid>

                    <!-- Change the color of all circles -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Fill" TargetName="CircleTop" Value="{StaticResource ToggleNavButton.Circle.Color}"/>
                            <Setter Property="Fill" TargetName="CircleCenter" Value="{StaticResource ToggleNavButton.Circle.Color}"/>
                            <Setter Property="Fill" TargetName="CircleBot" Value="{StaticResource ToggleNavButton.Circle.Color}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="CircleTop" Value="{StaticResource ToggleNavButton.Hover.Color}"/>
                            <Setter Property="Fill" TargetName="CircleCenter" Value="{StaticResource ToggleNavButton.Hover.Color}"/>
                            <Setter Property="Fill" TargetName="CircleBot" Value="{StaticResource ToggleNavButton.Hover.Color}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="CircleTop" Value="{StaticResource ToggleNavButton.Pressed.Color}"/>
                            <Setter Property="Fill" TargetName="CircleCenter" Value="{StaticResource ToggleNavButton.Pressed.Color}"/>
                            <Setter Property="Fill" TargetName="CircleBot" Value="{StaticResource ToggleNavButton.Pressed.Color}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style definitions for the media bar toggle button -->
    <Style x:Key="ToggleMediaBarStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Path Name="ButtonPath" StrokeThickness="1" Data="M 3 3 L 10 17 17 3 z"
                          Stroke="{StaticResource MediaBarButton.Default.Color}"
                          Fill="{StaticResource MediaBarButton.Default.Color}"/>
                    
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding MediaBarVisible}" Value="False">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Fill" TargetName="ButtonPath" Value="{StaticResource MediaBarButton.Default.Color}"/>
                            <Setter Property="Stroke" TargetName="ButtonPath" Value="{StaticResource MediaBarButton.Default.Color}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="ButtonPath" Value="{StaticResource MediaBarButton.Hover.Color}"/>
                            <Setter Property="Stroke" TargetName="ButtonPath" Value="{StaticResource MediaBarButton.Hover.Color}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="ButtonPath" Value="{StaticResource MediaBarButton.Pressed.Color}"/>
                            <Setter Property="Stroke" TargetName="ButtonPath" Value="{StaticResource MediaBarButton.Pressed.Color}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style definitions for the show info button -->
    <Style x:Key="ShowInfoButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Width="22" Height="22" BorderBrush="{StaticResource ShowInfo.Default.Color}" BorderThickness="2" CornerRadius="12" Background="Transparent">
                        <ContentPresenter x:Name="contentPresenter" Content="?" TextBlock.Foreground="{StaticResource ShowInfo.Default.Color}" TextBlock.FontSize="15" TextBlock.FontWeight="Bold" Margin="0,-1.7,0,0" Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ShowInfo.Default.Color}"/>
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource ShowInfo.Default.Color}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ShowInfo.Hover.Color}"/>
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource ShowInfo.Hover.Color}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ShowInfo.Pressed.Color}"/>
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource ShowInfo.Pressed.Color}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" TargetName="border" Value="Gray"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style definitions for the sort order toggle button -->
    <Style x:Key="SortOrderButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox Stretch="Uniform">
                        <Canvas Background="Transparent" Width="64" Height="64">
                            <Canvas.Resources/>
                            <Canvas>
                                <Rectangle Name="RectBorder" Canvas.Left="3" Canvas.Top="3" Width="58" Height="58" RadiusY="15" RadiusX="15" StrokeThickness="3.77952766" Stroke="#FFE6E6E6" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Opacity="1"/>
                                <Path Name="ArrowUp" Fill="#FFE6E6E6" StrokeThickness="0" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Opacity="1">
                                    <Path.Data>
                                        <PathGeometry Figures="m 19.161275 21.506499 c 0.01005 -0.249995 -0.0385 -0.332031 -0.44252 -0.140625 0 0 -6.252611 2.585208 -7.025946 2.902345 -0.773335 0.317137 -1.169863 -0.480956 -0.813573 -0.945878 0.35629 -0.464922 11.371458 -14.7638946 11.371458 -14.7638946 0.379794 -0.4801088 0.630681 -0.4797487 0.940163 -0.049701 0 0 11.131822 14.4405426 11.447422 14.9511976 0.3156 0.510656 -0.137989 1.031421 -0.793925 0.813936 -0.655936 -0.217485 -7.123917 -2.92754 -7.123917 -2.92754 -0.251673 -0.113281 -0.390064 -0.08984 -0.391738 0.195313 v 31.691797 c 0.0043 0.30599 -0.06957 0.416667 -0.362168 0.414063 h -6.446994 c -0.357702 0.0026 -0.348216 -0.244792 -0.358262 -0.414063 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path Name="ArrowDown" Fill="#FFE6E6E6" StrokeThickness="0" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Opacity="1">
                                    <Path.Data>
                                        <PathGeometry Figures="m 37.608974 42.109144 c 0.01005 0.249995 -0.0385 0.332031 -0.44252 0.140625 0 0 -6.252611 -2.585208 -7.025946 -2.902345 -0.773335 -0.317137 -1.169863 0.480956 -0.813573 0.945878 0.35629 0.464922 11.371458 14.763895 11.371458 14.763895 0.379794 0.480108 0.630681 0.479748 0.940163 0.0497 0 0 11.131822 -14.440543 11.447422 -14.951198 0.3156 -0.510656 -0.137989 -1.031421 -0.793925 -0.813936 -0.655936 0.217485 -7.123917 2.92754 -7.123917 2.92754 -0.251673 0.113281 -0.390064 0.08984 -0.391738 -0.195313 V 10.382194 c 0.0043 -0.30599 -0.06957 -0.416667 -0.362168 -0.414063 h -6.446994 c -0.357702 -0.0026 -0.348216 0.244792 -0.358262 0.414063 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Canvas>
                    </Viewbox>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Fill" TargetName="ArrowUp" Value="{StaticResource MediaBarButton.Default.Color}"/>
                            <Setter Property="Fill" TargetName="ArrowDown" Value="{StaticResource MediaBarButton.Default.Color}"/>
                            <Setter Property="Stroke" TargetName="RectBorder" Value="{StaticResource MediaBarButton.Default.Color}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="ArrowUp" Value="{StaticResource MediaBarButton.Hover.Color}"/>
                            <Setter Property="Fill" TargetName="ArrowDown" Value="{StaticResource MediaBarButton.Hover.Color}"/>
                            <Setter Property="Stroke" TargetName="RectBorder" Value="{StaticResource MediaBarButton.Hover.Color}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="ArrowUp" Value="{StaticResource MediaBarButton.Pressed.Color}"/>
                            <Setter Property="Fill" TargetName="ArrowDown" Value="{StaticResource MediaBarButton.Pressed.Color}"/>
                            <Setter Property="Stroke" TargetName="RectBorder" Value="{StaticResource MediaBarButton.Pressed.Color}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style definitions for the sort mode button -->
    <Style x:Key="SortModeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox Stretch="Uniform">
                        <Canvas Background="Transparent" Width="64" Height="64">
                            <Canvas.Resources/>
                            <Canvas>
                                <Rectangle Name="RectBorder" Canvas.Left="3" Canvas.Top="3" Width="58" Height="58" RadiusY="15" RadiusX="15" StrokeThickness="3.77952766" Stroke="#FFE6E6E6" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Opacity="1"/>
                                <Canvas>
                                    <Canvas.RenderTransform>
                                        <TranslateTransform X="1.2110357" Y="-1.463107"/>
                                    </Canvas.RenderTransform>
                                    <Rectangle Name="TopBox" Canvas.Left="21.48086" Canvas.Top="16.163" Width="30.954491" Height="5.4346223" RadiusY="2.7173111" RadiusX="2.7173111" Fill="#FFE6E6E6" StrokeThickness="0" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Opacity="1"/>
                                    <Rectangle Name="MiddleBox" Canvas.Left="21.48086" Canvas.Top="30.745796" Width="30.954491" Height="5.4346223" RadiusY="2.7173111" RadiusX="2.7173111" Fill="#FFE6E6E6" StrokeThickness="0" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Opacity="1"/>
                                    <Rectangle Name="BottomBox" Canvas.Left="21.48086" Canvas.Top="45.32859" Width="30.954491" Height="5.4346223" RadiusY="2.7173111" RadiusX="2.7173111" Fill="#FFE6E6E6" StrokeThickness="0" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Opacity="1"/>
                                    <Path Name="TopCircle" Fill="#FFE6E6E6" StrokeThickness="0" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Opacity="1">
                                        <Path.Data>
                                            <PathGeometry Figures="m 13.501953 12.520936 a 6.3593751 6.3593751 0 0 0 -6.3593749 6.359375 6.3593751 6.3593751 0 0 0 6.3593749 6.359375 6.3593751 6.3593751 0 0 0 6.359375 -6.359375 6.3593751 6.3593751 0 0 0 -6.359375 -6.359375 z m 0 2.95189 a 3.4062807 3.4062807 0 0 1 3.405114 3.407485 3.4062807 3.4062807 0 0 1 -3.405114 3.405113 3.4062807 3.4062807 0 0 1 -3.407486 -3.405113 3.4062807 3.4062807 0 0 1 3.407486 -3.407485 z" FillRule="NonZero"/>
                                        </Path.Data>
                                    </Path>
                                    <Path Name="MiddleCircle" Fill="#FFE6E6E6" StrokeThickness="0" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Opacity="1">
                                        <Path.Data>
                                            <PathGeometry Figures="m 13.501953 27.103732 a 6.3593751 6.3593751 0 0 0 -6.3593749 6.359375 6.3593751 6.3593751 0 0 0 6.3593749 6.359375 6.3593751 6.3593751 0 0 0 6.359375 -6.359375 6.3593751 6.3593751 0 0 0 -6.359375 -6.359375 z m 0 2.95189 a 3.4062807 3.4062807 0 0 1 3.405114 3.407485 3.4062807 3.4062807 0 0 1 -3.405114 3.405113 3.4062807 3.4062807 0 0 1 -3.407486 -3.405113 3.4062807 3.4062807 0 0 1 3.407486 -3.407485 z" FillRule="NonZero"/>
                                        </Path.Data>
                                    </Path>
                                    <Path Name="BottomCircle" Fill="#FFE6E6E6" StrokeThickness="0" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Opacity="1">
                                        <Path.Data>
                                            <PathGeometry Figures="m 13.501953 41.686528 a 6.3593751 6.3593751 0 0 0 -6.3593749 6.359375 6.3593751 6.3593751 0 0 0 6.3593749 6.359375 6.3593751 6.3593751 0 0 0 6.359375 -6.359375 6.3593751 6.3593751 0 0 0 -6.359375 -6.359375 z m 0 2.95189 a 3.4062807 3.4062807 0 0 1 3.405114 3.407485 3.4062807 3.4062807 0 0 1 -3.405114 3.405113 3.4062807 3.4062807 0 0 1 -3.407486 -3.405113 3.4062807 3.4062807 0 0 1 3.407486 -3.407485 z" FillRule="NonZero"/>
                                        </Path.Data>
                                    </Path>
                                </Canvas>
                            </Canvas>
                        </Canvas>
                    </Viewbox>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Fill" TargetName="TopBox" Value="{StaticResource MediaBarButton.Default.Color}"/>
                            <Setter Property="Fill" TargetName="MiddleBox" Value="{StaticResource MediaBarButton.Default.Color}"/>
                            <Setter Property="Fill" TargetName="BottomBox" Value="{StaticResource MediaBarButton.Default.Color}"/>
                            <Setter Property="Fill" TargetName="TopCircle" Value="{StaticResource MediaBarButton.Default.Color}"/>
                            <Setter Property="Fill" TargetName="MiddleCircle" Value="{StaticResource MediaBarButton.Default.Color}"/>
                            <Setter Property="Fill" TargetName="BottomCircle" Value="{StaticResource MediaBarButton.Default.Color}"/>
                            <Setter Property="Stroke" TargetName="RectBorder" Value="{StaticResource MediaBarButton.Default.Color}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="TopBox" Value="{StaticResource MediaBarButton.Hover.Color}"/>
                            <Setter Property="Fill" TargetName="MiddleBox" Value="{StaticResource MediaBarButton.Hover.Color}"/>
                            <Setter Property="Fill" TargetName="BottomBox" Value="{StaticResource MediaBarButton.Hover.Color}"/>
                            <Setter Property="Fill" TargetName="TopCircle" Value="{StaticResource MediaBarButton.Hover.Color}"/>
                            <Setter Property="Fill" TargetName="MiddleCircle" Value="{StaticResource MediaBarButton.Hover.Color}"/>
                            <Setter Property="Fill" TargetName="BottomCircle" Value="{StaticResource MediaBarButton.Hover.Color}"/>
                            <Setter Property="Stroke" TargetName="RectBorder" Value="{StaticResource MediaBarButton.Hover.Color}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="TopBox" Value="{StaticResource MediaBarButton.Pressed.Color}"/>
                            <Setter Property="Fill" TargetName="MiddleBox" Value="{StaticResource MediaBarButton.Pressed.Color}"/>
                            <Setter Property="Fill" TargetName="BottomBox" Value="{StaticResource MediaBarButton.Pressed.Color}"/>
                            <Setter Property="Fill" TargetName="TopCircle" Value="{StaticResource MediaBarButton.Pressed.Color}"/>
                            <Setter Property="Fill" TargetName="MiddleCircle" Value="{StaticResource MediaBarButton.Pressed.Color}"/>
                            <Setter Property="Fill" TargetName="BottomCircle" Value="{StaticResource MediaBarButton.Pressed.Color}"/>
                            <Setter Property="Stroke" TargetName="RectBorder" Value="{StaticResource MediaBarButton.Pressed.Color}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>