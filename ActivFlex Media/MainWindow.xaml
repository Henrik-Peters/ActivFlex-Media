<Window x:Class="ActivFlex.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="clr-namespace:ActivFlex.Controls"
        xmlns:Converters="clr-namespace:ActivFlex.Converters"
        xmlns:Media="clr-namespace:ActivFlex.Media;assembly=ActivFlex-Core"
        xmlns:FileSystem="clr-namespace:ActivFlex.FileSystem;assembly=ActivFlex-Core"
        xmlns:Presentation="clr-namespace:ActivFlex.Presentation;assembly=ActivFlex-Presenter"
        mc:Ignorable="d"
        Title="ActivFlex Media" Height="835" Width="1640"
        WindowStyle="None" AllowsTransparency="True" Background="#494A52"
        WindowStartupLocation="CenterScreen" Icon="Images/ActivFlexIcon.ico" FontSize="18"
        StateChanged="Window_StateChanged" Loaded="Window_Loaded" PreviewKeyDown="Window_PreviewKeyDown">

    <!-- Converter instances and window specific styles -->
    <Window.Resources>
        <Converters:NavItemIconConverter x:Key="NavIconConverter"/>
        <Converters:BooleanVisibilityConverter x:Key="BoolVisibilityConverter"/>
        <KeyTime x:Key="NavTreeFadeTime">0:0:0.2</KeyTime>
    </Window.Resources>

    <!-- Input command bindings -->
    <Window.InputBindings>
        <KeyBinding Command="{Binding ExitMode}" Key="Esc"/>
        <KeyBinding Command="{Binding BrowseUp}" Key="Backspace"/>
        <KeyBinding Command="{Binding IncreaseZoom}" Key="Add"/>
        <KeyBinding Command="{Binding IncreaseZoom}" Key="Add" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding DecreaseZoom}" Key="Subtract"/>
        <KeyBinding Command="{Binding DecreaseZoom}" Key="Subtract" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding ResetZoom}" Key="NumPad0" Modifiers="Ctrl"/>
        <MouseBinding Command="{Binding ResetZoom}" Gesture="MiddleClick"/>
    </Window.InputBindings>

    <WindowChrome.WindowChrome>
        <!-- Height for the drag area of window title bar -->
        <WindowChrome CaptionHeight="35"/>
    </WindowChrome.WindowChrome>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35" />
            <RowDefinition Height="60" />
            <RowDefinition Height="*" />
            <RowDefinition Height="60" />
        </Grid.RowDefinitions>
        
        <!-- Titlebar grid area -->
        <Grid Grid.ColumnSpan="3" VerticalAlignment="Top" Background="DarkGray">
            <!-- Left StackPanel: IsHitTestVisibleInChrome will prevent dragging on a click -->
            <StackPanel Height="35" WindowChrome.IsHitTestVisibleInChrome="True" VerticalAlignment="Center" HorizontalAlignment="Left" Orientation="Horizontal">
                <Label x:Name="lblTitleHeader" Content="ActivFlex Media" Style="{StaticResource Orkney}" FontSize="22" HorizontalAlignment="Left" Margin="5,2,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
            </StackPanel>

            <!-- Right StackPanel: IsHitTestVisibleInChrome will prevent dragging on a click -->
            <StackPanel Height="35" WindowChrome.IsHitTestVisibleInChrome="True" VerticalAlignment="Center" HorizontalAlignment="Right" Orientation="Horizontal">
                <Controls:IconButton Width="30" x:Name="btnMinimize" 
                             ContentDefault="{StaticResource MinimizeIcon}" 
                             ContentHover="{StaticResource MinimizeIconHover}" 
                             ContentPressed="{StaticResource MinimizeIconPressed}"/>

                <Controls:IconButton Width="30" x:Name="btnMaximize" 
                             ContentDefault="{StaticResource MaximizeIcon}" 
                             ContentHover="{StaticResource MaximizeIconHover}" 
                             ContentPressed="{StaticResource MaximizeIconPressed}"/>

                <Controls:IconButton Width="30" x:Name="btnClose" 
                             ContentDefault="{StaticResource CloseIcon}" 
                             ContentHover="{StaticResource CloseIconHover}" 
                             ContentPressed="{StaticResource CloseIconPressed}"/>
            </StackPanel>
        </Grid>
        
        <!-- Navigation area -->
        <TreeView x:Name="NavView" Grid.Row="1" Grid.RowSpan="2" ItemsSource="{Binding NavItems}" Margin="10,10,0,0" Background="Transparent" 
                  Height="Auto" Width="240" HorizontalContentAlignment="Stretch" Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                  SelectedItemChanged="NavView_SelectedItemChanged">
            <TreeView.ItemTemplate>
                <!-- Bind the children of each item to create a recursive pattern -->
                <HierarchicalDataTemplate ItemsSource="{Binding NavChildren}">

                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter Height="30" Width="20" Content="{Binding Converter={StaticResource NavIconConverter}}"/>
                        <TextBlock Text="{Binding DisplayName}" Foreground="#E6E6E6" VerticalAlignment="Center" Margin="5,0,0,0"/>
                    </StackPanel>

                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>

            <!-- TreeView visibility toggle animation -->
            <TreeView.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding NavVisible}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Width" BeginTime="00:00:00">
                                            <SplineDoubleKeyFrame KeyTime="{StaticResource NavTreeFadeTime}" Value="240"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                            <SplineThicknessKeyFrame KeyTime="{StaticResource NavTreeFadeTime}" Value="10,10,0,0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Width" BeginTime="00:00:00">
                                            <SplineDoubleKeyFrame KeyTime="{StaticResource NavTreeFadeTime}" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                            <SplineThicknessKeyFrame KeyTime="{StaticResource NavTreeFadeTime}" Value="0,10,0,0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TreeView.Style>
        </TreeView>

        <!-- Split area between the navigation tree view and the presentation area -->
        <Button Command="{Binding ToggleNavVisibility}" Style="{StaticResource toggleNavButton}" Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" Width="10" Height="40"/>

        <!-- Media header presentation area -->
        <Grid Grid.Row="1" Grid.Column="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="45"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="310"/>
            </Grid.ColumnDefinitions>

            <Controls:IconButton x:Name="BtnBack" Width="35" Height="35" Grid.Column="0" Margin="10,0,0,0" VerticalAlignment="Center"
                                 Command="{Binding BrowseUp}"
                                 Visibility="{Binding PathAvailable, Converter={StaticResource BoolVisibilityConverter}}"
                                 ContentDefault="{StaticResource BackIcon}"
                                 ContentHover="{StaticResource BackIconHover}"
                                 ContentPressed="{StaticResource BackIconPressed}"/>

            <Controls:PathNavigator Grid.Column="1" Margin="5,0,0,0" Path="{Binding Path}" Command="{Binding BrowseFileSystem}"/>
            
            <Slider x:Name="ZoomSlider"
                    Width="200" 
                    Grid.Column="2"
                    Margin="0,0,100,0"
                    Minimum="0.5"
                    Maximum="3.0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"
                    IsSnapToTickEnabled="True"
                    Ticks="0.5, 0.6, 0.7, 0.8, 1.0, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0"
                    TickPlacement="TopLeft"
                    Value="{Binding Zoom, Mode=TwoWay}"/>
        </Grid>

        <!-- Media presentation area -->
        <ScrollViewer x:Name="MediaScrollViewer" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Grid.Row="2" Grid.Column="3" PreviewMouseWheel="MediaScrollViewer_PreviewMouseWheel">
            <ItemsControl x:Name="MediaItemControl" ItemsSource="{Binding FileSystemItems}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        
                        <!-- Wrapping area for media thumbnails -->
                        <WrapPanel x:Name="MediaWrapPanel" FlowDirection="LeftToRight">
                            <WrapPanel.LayoutTransform>
                                <ScaleTransform x:Name="MediaScaleTransform" ScaleX="{Binding Zoom}" ScaleY="{Binding Zoom}"/>
                            </WrapPanel.LayoutTransform>

                            <WrapPanel.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <BeginStoryboard>
                                        <Storyboard Name="MyStoryboard">
                                            <DoubleAnimation x:Name="thumbScaleAnimationX"
                                                             Storyboard.TargetName="MediaScaleTransform"
                                                             Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                             To="{Binding Zoom, NotifyOnTargetUpdated=True}" Duration="0:0:0.2"/>

                                            <DoubleAnimation x:Name="thumbScaleAnimationY"
                                                             Storyboard.TargetName="MediaScaleTransform"
                                                             Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                             To="{Binding Zoom, NotifyOnTargetUpdated=True}" Duration="0:0:0.2"/>

                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </WrapPanel.Triggers>
                        </WrapPanel>
                        
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Resources>

                    <DataTemplate DataType="{x:Type FileSystem:FileItem}">
                        <!-- No display for normal files -->
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type FileSystem:DirectoryItem}">
                        <Controls:DirectoryThumbnail Margin="20,5,20,20"
                                                     CanSelect="False"
                                                     Proxy="{Binding}"
                                                     Click="{Binding DataContext.BrowseFileSystem,
                                                             RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type Media:MediaImage}">
                        <Controls:ImageThumbnail Margin="20,5,20,20"
                                                 Width="150"
                                                 Height="150"
                                                 CanSelect="False"
                                                 Proxy="{Binding}"
                                                 Click="{Binding DataContext.PresentImage,
                                                         RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                    </DataTemplate>

                </ItemsControl.Resources>
            </ItemsControl>
        </ScrollViewer>

        <!-- Image presentation control -->
        <Presentation:ImagePresenter x:Name="MediaPresenter" Grid.Row="1" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="3"
                                     Visibility="{Binding ImagePresentActive, Converter={StaticResource BoolVisibilityConverter}}"
                                     Image="{Binding ImagePresentData}"/>

        <!-- Window border -->
        <Border x:Name="outerBorder" Grid.RowSpan="4" Grid.ColumnSpan="3" 
                BorderThickness="1"
                BorderBrush="#7C7C82">
        </Border>

    </Grid>
</Window>